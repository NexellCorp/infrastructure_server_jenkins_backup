<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Jenkins job builder&#xd;
&#xd;
infrastructure_tool_jenkins-job-builder 를 trigger하여 jenkins의 project를 생성한다.&#xd;
LAVA test와 연동이 필요한 jenkins project는 auto generate 되도록 .yaml 을 구현하여야 한다.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.27.7">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>NexellCorp/infrastructure_tool_jenkins-job-builder</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>**</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames></dependencyJobsNames>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>BASE64</commentTextParameterMode>
      <buildStartMessage></buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl></customUrl>
      <serverName>NexellCorpGerritHub</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
          <excludeDrafts>true</excludeDrafts>
          <excludeTrivialRebase>true</excludeTrivialRebase>
          <excludeNoCodeChange>true</excludeNoCodeChange>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginDraftPublishedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo $PWD
${JENKINS_HOME}/scripts/checkGitStatus.sh -p NexellCorp/infrastructure_tool_jenkins-job-builder -b master
echo &quot;========================================&quot;
echo &quot;${GERRIT_PATCHSET_REVISION}&quot;
echo &quot;========================================&quot;
if [ &quot;${GERRIT_PATCHSET_REVISION}a&quot; != &quot;a&quot; ]; then
	${JENKINS_HOME}/scripts/getPatchSetLatest.sh -p NexellCorp/infrastructure_tool_jenkins-job-builder -b master -c ${GERRIT_PATCHSET_REVISION}
fi   
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;-------------------------------&quot;
echo &quot;Job Build Start&quot;
echo &quot;-------------------------------&quot;

yamllist=$(ls -trh ${WORKSPACE}/reference/qemu/jenkins-job*.yaml \
                   ${WORKSPACE}/s5p4418/yocto/sumo/daily/jenkins-job*.yaml \
                   ${WORKSPACE}/s5p4418/yocto/sumo/weekly/jenkins-job*.yaml \
                   ${WORKSPACE}/s5p4418/android/nougat/weekly/jenkins-job*.yaml \
                   ${WORKSPACE}/s5p6818/yocto/sumo/unit/jenkins-job*.yaml \
          )

echo &quot;---------------------------------&quot;
echo &quot;build yaml --&gt;&quot;
for entry in ${yamllist}
do
    echo &quot;$entry&quot;
    jenkins-jobs --conf configs/jenkins_jobs.ini update $entry
done
echo &quot;---------------------------------&quot;
echo &quot;Job Build End&quot;
echo &quot;---------------------------------&quot;</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.36">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.10"/>
  </buildWrappers>
</project>